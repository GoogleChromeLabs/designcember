---
import '../Days/day.css';
import Pic from '../Pic/Pic.astro';

import Day1 from '../Days/Day1.astro';
import Day2 from '../Days/Day2.astro';
import Day3 from '../Days/Day3.astro';
import Day4 from '../Days/Day4.astro';
import Day5 from '../Days/Day5.astro';
import Day6 from '../Days/Day6.astro';
import Day7 from '../Days/Day7.astro';
import Day8 from '../Days/Day8.astro';
import Day9 from '../Days/Day9.astro';
import Day10 from '../Days/Day10.astro';
import Day11 from '../Days/Day11.astro';
import Day12 from '../Days/Day12.astro';
import Day13 from '../Days/Day13.astro';
import Day14 from '../Days/Day14.astro';
import Day15 from '../Days/Day15.astro';
import Day16 from '../Days/Day16.astro';
import Day17 from '../Days/Day17.astro';
import Day18 from '../Days/Day18.astro';
import Day19 from '../Days/Day19.astro';
import Day20 from '../Days/Day20.astro';
import Day21 from '../Days/Day21.astro';
import Day22 from '../Days/Day22.astro';
import Day23 from '../Days/Day23.astro';
import Day24 from '../Days/Day24.astro';
import Day25 from '../Days/Day25.astro';
import Day26 from '../Days/Day26.astro';
import Day27 from '../Days/Day27.astro';
import Day28 from '../Days/Day28.astro';
import Day29 from '../Days/Day29.astro';
import Day30 from '../Days/Day30.astro';
import Day31 from '../Days/Day31.astro';
---
<main class="container">
  <div class="building-topper stacked">
    <div class="building-wreath">
      <Pic filename="building-top-with-wreath" width="3912" height="614" role="presentation" />
    </div>
    <div class="helpful-birb">
      <p class="birb-text">Jump to today!</p>
      <Pic filename="helpful_birb" role="presentation" />
    </div>
  </div>
  <main class="calendar">
    <Day1 />
    <Day2 />
    <Day3 />
    <div class="pair">
      <Day4 />
      <Day5 />
    </div>
    <Day6 />
    <Day7 />
    <Day8 />
    <Day9 />
    <Day10 />
    <Day11 />
    <Day12 />
    <Day13 />
    <Day14 />
    <Day15 />
    <Day16 />
    <Day17 />
    <div class="pair">
      <Day18 />
      <Day19 />
    </div>
    <Day20 />
    <Day21 />
    <div class="pair twentytwo-twentythree">
      <Day23 />
      <Day22 />
    </div>
    <Day24 />
    <div class="pair twentyfive-twentysix">
      <Day25 />
      <Day26 />
    </div>
    <Day27 />
    <Day28 />
    <Day29 />
    <Day30 />
    <Day31 />
  </main>
  <div class="snow">
    <div class="snow-left">
      <Pic filename="footer/left" role="presentation" />
    </div>
    <div class="snow-right">
      <Pic filename="footer/right" role="presentation" />
    </div>
  </div>
</main>

<script hoist>
  const validhashes = [
           '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th',
    '10th','11th','12th','13th','14th','15th','16th','17th','18th','19th',
    '20th','21st','22nd','23rd','24th','25th','26th','27th','28th','29th',
    '30th','31st',
  ]
  
  const onscroll = () => {
    // repeatedly clear the timer on scroll
    clearTimeout(window.scrollEndTimer)

    // and set a new one, so when it actually fires we know scroll has rested
    window.scrollEndTimer = setTimeout(onscrollended, 100)
  }

  const onscrollended = () => {
    const day = document.getElementById(hashtarget)
    document.querySelector('#tooltip').open(day)

    // remove event as we only needed scrollend notice once
    window.removeEventListener('scroll', onscroll)
  }

  // if there's a valid hashtarget, watch scroll for scrollend to show modal
  let hashtarget = window.location.hash.substring(1, window.location.hash.length)
  if (validhashes.includes(hashtarget)) {
    window.addEventListener('scroll', onscroll)
  }

  // on click/focus of active days 
  document.querySelectorAll('.day[data-day-state="active"]').forEach(day => {
    day.addEventListener('click', e => {
      // prevent browser scrolling to element
      e.preventDefault()
      e.stopPropagation()

      history.pushState(null, null, day.querySelector('a').getAttribute('href'))
      document.querySelector('#tooltip').open(day)
    })

    // when a day is focused, move focus to the <Number/> link element
    // and auto open the day
    day.addEventListener('focusin', e => {
      // only trigger focus when it's from a Number link
      // focus() is called on days after the tooltip is closed
      // `return` here prevents an infinite focus loop
      if (!e.relatedTarget) return

      history.pushState(null, null, day.querySelector('a').getAttribute('href'))
      document.querySelector('#tooltip').open(day)
    })

    // when enter is pressed, forward focus to the tooltip section
    day.addEventListener('keypress', e => {
      if (e.keyCode === 32) {
        e.preventDefault()
        e.stopPropagation()
        document.querySelector('#tooltip > section').focus()
      }
    })
  })

  // Helpful birb
  const birb = document.querySelector('.helpful-birb');
  birb.addEventListener('click', e => {
    e.preventDefault();

    goToToday();
  })

  const goToToday = () => {
    const today = [...document.querySelectorAll('[data-day-state="active"]')].pop();
    history.pushState(null, null, today.querySelector('a').getAttribute('href'));
    document.querySelector('#tooltip').open(today);
  }
</script>

<style>
  .container {
    display: grid;
    place-items: center;
    position: relative;
    width: 100%;
  }

  .building-topper {
    position: relative;
    background-color: #ffdbb8;
    display: grid;
    justify-items: flex-end;
    
    @media print {
      display: none; 
    }
  }

  .building-wreath {
    margin-block: -8% 3%;
    margin-inline-end: -3%;
    inline-size: 110%;
  }

  .birb-text {
    font-size: var(--font-size-1);
    background-image: url("/birb_speech_bubble.png");
    background-image: url("/birb_speech_bubble.webp");
    background-image: url("/birb_speech_bubble.avif");
    background-position: center;
    background-size: contain;
    transform: translateX(30px) translateY(10px);
    padding: 1.5rem 25% 2rem;
    text-align: center;
    max-width: 220px;
    opacity: 0;
    transition: opacity 0.25s;
  }

  .helpful-birb {
    inline-size: 20%;
    position: absolute;
    inset-block-end: 0;
    inset-inline-end: 5%;
  }

  .helpful-birb:hover .birb-text,
  .helpful-birb:focus .birb-text {
    opacity: 1;
  }

  .building-topper, .calendar {
    inline-size: min(80vw, 1280px);
  }

  .calendar {
    --_card-size: calc(50% - 80px); 
    --_windows: 1;
    --_building: 
      url(/brick-pattern.png), 
      linear-gradient(#ffecd3, #ffecd3);
    
    container: inline-size;
    position: relative;
    background: var(--_building);
    background-size: 100% auto;
    background-repeat: repeat-y;
    background-blend-mode: luminosity;

    display: grid;
    grid-template-columns: repeat(var(--_windows), minmax(var(--_card-size), 1fr));
    grid-auto-flow: dense;
    column-gap: 5%;
    padding-inline: 5%;
    align-items: center;
    padding-block: 2% 40%;
    z-index: 1;
    
    @media (--sm) {
      --_windows: 2;
    }
    
    @media (--md) {
      --_card-size: calc(33% - 80px);
      --_windows: 3;
      column-gap: 4%;
      padding-inline: 4%;
    }
    
    @media (--lg) {
      --_card-size: calc(25% - 80px);
      --_windows: 4;
      padding-inline: 40px;
    }

    @media print {
      display: none; 
    }
  }

  .pair {
    display: grid;
    justify-items: center;
    aspect-ratio: 1;

    --_pair-column: 1;
    --_pair-height: 1;
    grid-row: span var(--_pair-height);
    grid-column: span var(--_pair-column);
  }

.twentyfive-twentysix {
    @media (--md) {
      --_pair-column: 2;
      aspect-ratio: 0;
    }

    @media (--lg) {
      --_pair-column: 1;
    }
  }

  .snow-left,
  .snow-right {
    position: absolute;
    bottom: 0;
    width: 30%;
    z-index: 0;
    padding-block-end: 30%;
  }

  .snow-left {
    left: 0;
  }

  .snow-right {
    right: 0;
  }

  @media (--md) {
    .snow-left,
    .snow-right {
      width: 20%;
    }
  }
</style>

<style global>
  [data-theme="dark"] {
    & .calendar {
      --_building: 
        linear-gradient(hsl(208deg 71% 14% / 80%), hsl(210deg 29% 34% / 80%)), url(/brick-pattern.png), linear-gradient(hsl(208deg 71% 14% / 100%), hsl(210deg 29% 34% / 100%));
    }

    & .snow-left,
    & .snow-right {
      opacity: 0.3;
    }

    & .building-topper {
      background-color: hsl(208deg 71% 11%);
    }

    & .building-wreath {
      filter: brightness(0.6) saturate(0.6)
    }
  }
</style>